PWM on STM32F103C8:

The frequency of the PWM is determined by the TIMx_ARR - auto reload register
The duty cycle of the PWM is determined by the CCRx register- Capture compare register where x= channel
PWM mode can be selected by setting the OCM bits of the TIMx_CCMRx register
CCMR1 deals with channel 1 and 2 of a timer while CCMR2 deals with channel 3  and 4

TIMx_CCER register is used to enable the Capture compare on the 4 channels

Preload register is a register to which the value is written and stored in a shadow if it is enabled.
In hardware, it is going to preload the value that is given as input to a shadow register and the CCRx 
register is only updated after an over flow event

So if preload is enabled, the value of user input is store in shadow register then given to CCRx after overflow event
If prelod is disabled, the value is immediately stored in CCRx register

This is controlled by OCxPE bit in CCMRx register corresponding to the timer we are using. x= 1,2,3,4

Next, we have to set the UG (update generation) bit in TIMx_EGR register (event generation register)


Summary of setting up the PWM is as follows:

1. Enable the clock to the GPIO using the APB1 or APB2 register
2. The alternate function mode has to be enabled so that the pin will be linked to the timer
3. Configure the Pin as alternate function push pull pin and set the mode as output mode at any speed you wish
4. Enable the capture compare mode in the TIMx_CCER ( Timerx capture compare enable register) for the particular channel of the timer
5. Enable the ARPE bit in the control register
6. Set the PWM mode using the OCM bits of the CCMRx register. x=1,2,3..
7. Set the Timer Prescaler and AutoReload Register
8. Set the CCR register value
9. Set the update Generation bit in the TIMx_EGR register
10. Enable the timer using the CEN bit of the control register.